type token =
  | INT of (string)
  | FLOAT of (string)
  | NAME of (string)
  | LBRACE
  | RBRACE
  | EOF
  | ADD
  | SUB
  | TIMES
  | DIV
  | MOD
  | FACT
  | EXP
  | ADDDOT
  | SUBDOT
  | TIMESDOT
  | DIVDOT
  | DOT
  | INTOFFLOAT
  | FLOATOFINT

open Parsing;;
let _ = parse_error;;
let yytransl_const = [|
  260 (* LBRACE *);
  261 (* RBRACE *);
    0 (* EOF *);
  262 (* ADD *);
  263 (* SUB *);
  264 (* TIMES *);
  265 (* DIV *);
  266 (* MOD *);
  267 (* FACT *);
  268 (* EXP *);
  269 (* ADDDOT *);
  270 (* SUBDOT *);
  271 (* TIMESDOT *);
  272 (* DIVDOT *);
  273 (* DOT *);
  274 (* INTOFFLOAT *);
  275 (* FLOATOFINT *);
    0|]

let yytransl_block = [|
  257 (* INT *);
  258 (* FLOAT *);
  259 (* NAME *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\002\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\000\000"

let yylen = "\002\000\
\001\000\001\000\001\000\003\000\003\000\003\000\003\000\003\000\
\004\000\004\000\004\000\003\000\002\000\003\000\001\000\003\000\
\003\000\003\000\004\000\004\000\004\000\003\000\003\000\001\000\
\002\000"

let yydefred = "\000\000\
\000\000\000\000\015\000\024\000\000\000\000\000\000\000\000\000\
\000\000\025\000\001\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\013\000\000\000\000\000\000\000\000\000\000\000\012\000\022\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\009\000\019\000\
\010\000\020\000\000\000\000\000\011\000\000\000\000\000\021\000"

let yydgoto = "\002\000\
\010\000\011\000\014\000\015\000"

let yysindex = "\255\255\
\001\255\000\000\000\000\000\000\001\255\000\255\007\255\014\255\
\017\255\000\000\000\000\136\255\083\255\105\255\064\255\001\255\
\001\255\037\255\041\255\041\255\041\255\041\255\041\255\041\255\
\000\000\041\255\041\255\037\255\037\255\037\255\000\000\000\000\
\113\255\075\255\121\255\079\255\037\255\023\255\034\255\094\255\
\041\255\045\255\046\255\129\255\005\255\005\255\012\255\012\255\
\040\255\136\255\136\255\250\254\250\254\043\255\000\000\000\000\
\000\000\000\000\037\255\037\255\000\000\041\255\041\255\000\000"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\053\000\058\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\034\000\037\000\012\000\023\000\
\001\000\040\000\051\000\057\000\067\000\054\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"

let yygindex = "\000\000\
\000\000\000\000\009\000\045\000"

let yytablesize = 337
let yytable = "\001\000\
\008\000\003\000\004\000\016\000\005\000\027\000\006\000\007\000\
\030\000\012\000\017\000\006\000\022\000\023\000\024\000\025\000\
\026\000\018\000\008\000\009\000\019\000\024\000\007\000\026\000\
\033\000\035\000\059\000\044\000\045\000\046\000\047\000\048\000\
\049\000\004\000\050\000\051\000\005\000\060\000\004\000\014\000\
\037\000\003\000\038\000\039\000\041\000\013\000\042\000\043\000\
\062\000\063\000\023\000\026\000\002\000\018\000\027\000\009\000\
\016\000\003\000\008\000\000\000\034\000\036\000\040\000\000\000\
\000\000\000\000\017\000\000\000\032\000\000\000\033\000\035\000\
\052\000\053\000\054\000\027\000\028\000\029\000\030\000\056\000\
\000\000\000\000\000\000\058\000\000\000\000\000\027\000\028\000\
\029\000\030\000\027\000\028\000\029\000\030\000\027\000\028\000\
\029\000\030\000\061\000\000\000\000\000\000\000\000\000\034\000\
\036\000\027\000\028\000\029\000\030\000\031\000\020\000\021\000\
\022\000\023\000\024\000\025\000\026\000\055\000\020\000\021\000\
\022\000\023\000\024\000\025\000\026\000\057\000\020\000\021\000\
\022\000\023\000\024\000\025\000\026\000\064\000\020\000\021\000\
\022\000\023\000\024\000\025\000\026\000\020\000\021\000\022\000\
\023\000\024\000\025\000\026\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\008\000\008\000\008\000\
\008\000\008\000\008\000\008\000\000\000\008\000\008\000\008\000\
\006\000\006\000\006\000\006\000\006\000\000\000\006\000\000\000\
\006\000\006\000\006\000\007\000\007\000\007\000\007\000\007\000\
\000\000\007\000\000\000\007\000\007\000\007\000\004\000\004\000\
\004\000\005\000\005\000\005\000\014\000\000\000\004\000\004\000\
\004\000\005\000\005\000\005\000\014\000\014\000\014\000\023\000\
\000\000\000\000\018\000\000\000\000\000\016\000\000\000\023\000\
\023\000\023\000\018\000\018\000\018\000\016\000\016\000\017\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\
\017\000"

let yycheck = "\001\000\
\000\000\001\001\002\001\004\001\004\001\012\001\006\001\007\001\
\015\001\001\000\004\001\000\000\008\001\009\001\010\001\011\001\
\012\001\004\001\018\001\019\001\004\001\010\001\000\000\012\001\
\016\000\017\000\004\001\019\000\020\000\021\000\022\000\023\000\
\024\000\000\000\026\000\027\000\000\000\004\001\002\001\000\000\
\004\001\001\001\006\001\007\001\004\001\001\000\006\001\007\001\
\004\001\004\001\000\000\012\001\000\000\000\000\012\001\019\001\
\000\000\000\000\018\001\255\255\016\000\017\000\018\000\255\255\
\255\255\255\255\000\000\255\255\005\001\255\255\062\000\063\000\
\028\000\029\000\030\000\012\001\013\001\014\001\015\001\005\001\
\255\255\255\255\255\255\005\001\255\255\255\255\012\001\013\001\
\014\001\015\001\012\001\013\001\014\001\015\001\012\001\013\001\
\014\001\015\001\005\001\255\255\255\255\255\255\255\255\059\000\
\060\000\012\001\013\001\014\001\015\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\012\001\006\001\007\001\008\001\
\009\001\010\001\011\001\012\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\005\001\006\001\007\001\
\008\001\009\001\010\001\011\001\255\255\013\001\014\001\015\001\
\005\001\006\001\007\001\008\001\009\001\255\255\011\001\255\255\
\013\001\014\001\015\001\005\001\006\001\007\001\008\001\009\001\
\255\255\011\001\255\255\013\001\014\001\015\001\005\001\006\001\
\007\001\005\001\006\001\007\001\005\001\255\255\013\001\014\001\
\015\001\013\001\014\001\015\001\013\001\014\001\015\001\005\001\
\255\255\255\255\005\001\255\255\255\255\005\001\255\255\013\001\
\014\001\015\001\013\001\014\001\015\001\013\001\014\001\005\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\013\001\
\014\001"

let yynames_const = "\
  LBRACE\000\
  RBRACE\000\
  EOF\000\
  ADD\000\
  SUB\000\
  TIMES\000\
  DIV\000\
  MOD\000\
  FACT\000\
  EXP\000\
  ADDDOT\000\
  SUBDOT\000\
  TIMESDOT\000\
  DIVDOT\000\
  DOT\000\
  INTOFFLOAT\000\
  FLOATOFINT\000\
  "

let yynames_block = "\
  INT\000\
  FLOAT\000\
  NAME\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexp) in
    Obj.repr(
# 19 "parser.mly"
      ( _1 )
# 224 "parser.ml"
               : Asyntax.sexp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 23 "parser.mly"
          (Asyntax.Intexp _1)
# 231 "parser.ml"
               : 'sexp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'sexfloat) in
    Obj.repr(
# 24 "parser.mly"
            (Asyntax.Floatexp _1)
# 238 "parser.ml"
               : 'sexp))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 27 "parser.mly"
                     (Asyntax.Addi(_1,_3))
# 246 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 28 "parser.mly"
                     (Asyntax.Subi(_1,_3))
# 254 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 29 "parser.mly"
                       (Asyntax.Timesi(_1,_3))
# 262 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 30 "parser.mly"
                     (Asyntax.Divi(_1,_3))
# 270 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 31 "parser.mly"
                     (Asyntax.Modi(_1,_3))
# 278 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexint) in
    Obj.repr(
# 32 "parser.mly"
                            (Asyntax.UAddi _3)
# 285 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexint) in
    Obj.repr(
# 33 "parser.mly"
                            (Asyntax.USubi _3)
# 292 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexfloat) in
    Obj.repr(
# 34 "parser.mly"
                                     (Asyntax.Convfi _3)
# 299 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'sexint) in
    Obj.repr(
# 35 "parser.mly"
                        (_2)
# 306 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'sexint) in
    Obj.repr(
# 36 "parser.mly"
               (Asyntax.Fact _1)
# 313 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexint) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 37 "parser.mly"
                     (Asyntax.Expi (_1,_3))
# 321 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 38 "parser.mly"
       (Asyntax.Int _1)
# 328 "parser.ml"
               : 'sexint))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexfloat) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexfloat) in
    Obj.repr(
# 41 "parser.mly"
                            (Asyntax.Addf(_1,_3))
# 336 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexfloat) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexfloat) in
    Obj.repr(
# 42 "parser.mly"
                            (Asyntax.Subf(_1,_3))
# 344 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexfloat) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexfloat) in
    Obj.repr(
# 43 "parser.mly"
                              (Asyntax.Timesf(_1,_3))
# 352 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexfloat) in
    Obj.repr(
# 44 "parser.mly"
                              (Asyntax.UAddf _3)
# 359 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexfloat) in
    Obj.repr(
# 45 "parser.mly"
                              (Asyntax.USubf _3)
# 366 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'sexint) in
    Obj.repr(
# 46 "parser.mly"
                                   (Asyntax.Convif _3)
# 373 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'sexfloat) in
    Obj.repr(
# 47 "parser.mly"
                          (_2)
# 380 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'sexfloat) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'sexint) in
    Obj.repr(
# 48 "parser.mly"
                       (Asyntax.Expf(_1,_3))
# 388 "parser.ml"
               : 'sexfloat))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 49 "parser.mly"
         (Asyntax.Float _1)
# 395 "parser.ml"
               : 'sexfloat))
(* Entry parse *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let parse (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Asyntax.sexp)
